/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space,
	text
} from '../web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let nav;
	let div;
	let span;
	let a0;
	let img;
	let img_src_value;
	let t0;
	let t1;
	let a1;
	let t2;
	let t3;
	let a2;
	let t4;
	let t5;
	let a3;
	let t6;

	return {
		c() {
			nav = element("nav");
			div = element("div");
			span = element("span");
			a0 = element("a");
			img = element("img");
			t0 = text("Home");
			t1 = space();
			a1 = element("a");
			t2 = text("About");
			t3 = text(" \n    ");
			a2 = element("a");
			t4 = text("Contact");
			t5 = text(" \n    ");
			a3 = element("a");
			t6 = text("Admin");
			this.h();
		},
		l(nodes) {
			nav = claim_element(nodes, "NAV", { class: true });
			var nav_nodes = children(nav);
			div = claim_element(nav_nodes, "DIV", { class: true });
			var div_nodes = children(div);
			span = claim_element(div_nodes, "SPAN", { id: true, class: true });
			var span_nodes = children(span);
			a0 = claim_element(span_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			img = claim_element(a0_nodes, "IMG", { alt: true, src: true, class: true });
			t0 = claim_text(a0_nodes, "Home");
			a0_nodes.forEach(detach);
			span_nodes.forEach(detach);
			t1 = claim_space(div_nodes);
			a1 = claim_element(div_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);
			t2 = claim_text(a1_nodes, "About");
			a1_nodes.forEach(detach);
			t3 = claim_text(div_nodes, " \n    ");
			a2 = claim_element(div_nodes, "A", { href: true, class: true });
			var a2_nodes = children(a2);
			t4 = claim_text(a2_nodes, "Contact");
			a2_nodes.forEach(detach);
			t5 = claim_text(div_nodes, " \n    ");
			a3 = claim_element(div_nodes, "A", { href: true, class: true });
			var a3_nodes = children(a3);
			t6 = claim_text(a3_nodes, "Admin");
			a3_nodes.forEach(detach);
			div_nodes.forEach(detach);
			nav_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(img, "alt", "planarian");
			if (img.src !== (img_src_value = "assets/logo.svg")) attr(img, "src", img_src_value);
			attr(img, "class", "svelte-1nwrdwq");
			attr(a0, "href", ".");
			attr(a0, "class", "svelte-1nwrdwq");
			attr(span, "id", "brand");
			attr(span, "class", "svelte-1nwrdwq");
			attr(a1, "href", "about");
			attr(a1, "class", "svelte-1nwrdwq");
			attr(a2, "href", "contact");
			attr(a2, "class", "svelte-1nwrdwq");
			attr(a3, "href", "admin");
			attr(a3, "class", "svelte-1nwrdwq");
			attr(div, "class", "container svelte-1nwrdwq");
			attr(nav, "class", "svelte-1nwrdwq");
		},
		m(target, anchor) {
			insert(target, nav, anchor);
			append(nav, div);
			append(div, span);
			append(span, a0);
			append(a0, img);
			append(a0, t0);
			append(div, t1);
			append(div, a1);
			append(a1, t2);
			append(div, t3);
			append(div, a2);
			append(a2, t4);
			append(div, t5);
			append(div, a3);
			append(a3, t6);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(nav);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;